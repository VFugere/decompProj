summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'farm'),start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'forest'),start=list('k'= 0.01)))
#calculating k/day
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),fm,start=list('k'= 0.01)))
10^-1
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),cm,start=list('k'= 0.01)))
cm %>% filter(weeks == 4) %>% summarize(m = mean(prct.mass.rem), s = se(prct.mass.rem))
cm %>% filter(weeks == 4, land.use == 'forest') %>% summarize(m = mean(prct.mass.rem), s = se(prct.mass.rem))
cm %>% filter(weeks == 4, land.use == 'forest') %>% summarize(m = mean(prop.decomp), s = se(prct.mass.rem))
cm %>% filter(weeks == 4, land.use == 'forest') %>% summarize(m = mean(prct.mass.rem), s = se(prct.mass.rem))
cm %>% filter(weeks == 4, land.use == 'forest') %>% summarize(m = mean(prop.decomp), s = se(prop.decomp))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'forest'),start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'farm'),start=list('k'= 0.01)))
### Code for experimental project on drivers of decomposition in Kibale streams ###
### Vincent Fugère, 2019
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
#### load and format data ####
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
#to conduct dmg analysis at whole-leaf or whole-tree level
data <- data %>% group_by(leaf) %>% mutate(avg.dmg = mean(damage.area)) %>% ungroup
data <- data %>% group_by(tree) %>% mutate(tree.avg.dmg = mean(damage.area)) %>% ungroup
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#leaching un-adjusted for k calculation
data$exp.dec <- with(data, (AFDM.after / dry.weight)*100)
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
#1- because we want prop decomposed instead of prop left
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$lf.dmg <- rescale(data$avg.dmg, c(0,1))
data$tree.dmg <- rescale(data$tree.avg.dmg, c(0,1))
#### setting up models ####
#collinearity
corvif(data[,c('dmg','lu','ha','wks','wtr','lf.lu','lf.dmg','tree.dmg')])
#fragment damage and leaf total damage are obviously correlated
#also correlated with tree damage, and leaf land use
#will test separately. No dmg var has an effect; chose fragment damage in final models because cleaner
### Code for experimental project on drivers of decomposition in Kibale streams ###
### Vincent Fugère, 2019
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
#### load and format data ####
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#leaching un-adjusted for k calculation
data$exp.dec <- with(data, (AFDM.after / dry.weight)*100)
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$lf.dmg <- rescale(data$avg.dmg, c(0,1))
data$tree.dmg <- rescale(data$tree.avg.dmg, c(0,1))
### Code for experimental project on drivers of decomposition in Kibale streams ###
### Vincent Fugère, 2019
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
#### load and format data ####
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
#to conduct dmg analysis at whole-leaf or whole-tree level
data <- data %>% group_by(leaf) %>% mutate(avg.dmg = mean(damage.area)) %>% ungroup
data <- data %>% group_by(tree) %>% mutate(tree.avg.dmg = mean(damage.area)) %>% ungroup
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#leaching un-adjusted for k calculation
data$exp.dec <- with(data, (AFDM.after / dry.weight)*100)
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
#1- because we want prop decomposed instead of prop left
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$lf.dmg <- rescale(data$avg.dmg, c(0,1))
data$tree.dmg <- rescale(data$tree.avg.dmg, c(0,1))
#### setting up models ####
8+6+48+8+7+13+2+31+2+1+6+18+1+8+2+6+1+8+15+5+4+14+7
8/221
(8/221)*100
data %>% group_by(leaf.origin) %>% summarize(m = mean(dry.weight), sd = sd(dry.weight))
anova(lm(dry.weight~leaf.origin,data))
range(data$dry.weight)
sd(data$dry.weight)
sd(data$dry.weight)/sqrt(nrow(data))
data %>% group_by(site) %>% summarize(m = mean(dry.weight), sd = sd(dry.weight))
anova(lm(dry.weight~site,data))
data %>% group_by(leaf.deployment) %>% summarize(m = mean(dry.weight), sd = sd(dry.weight))
data %>% group_by(land.use) %>% summarize(m = mean(dry.weight), sd = sd(dry.weight))
mean(data$dry.weight)
data %>% group_by(mesh.type) %>% summarize(m = mean(dry.weight), sd = sd(dry.weight))
### Code for experimental project on drivers of decomposition in Kibale streams ###
### Vincent Fugère, 2019
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
#### load and format data ####
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
#to conduct dmg analysis at whole-leaf or whole-tree level
data <- data %>% group_by(leaf) %>% mutate(avg.dmg = mean(damage.area)) %>% ungroup
data <- data %>% group_by(tree) %>% mutate(tree.avg.dmg = mean(damage.area)) %>% ungroup
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#leaching un-adjusted for k calculation
data$exp.dec <- with(data, (AFDM.after / dry.weight)*100)
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
#1- because we want prop decomposed instead of prop left
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$lf.dmg <- rescale(data$avg.dmg, c(0,1))
data$tree.dmg <- rescale(data$tree.avg.dmg, c(0,1))
#### setting up models ####
#collinearity
corvif(data[,c('dmg','lu','ha','wks','wtr','lf.lu','lf.dmg','tree.dmg')])
#fragment damage and leaf total damage are obviously correlated
#also correlated with tree damage, and leaf land use
#will test separately. No dmg var has an effect; chose fragment damage in final models because cleaner
#model with time
f0 <- formula(rv ~ 1 + wks + wtr + dmg + ha + lu + lf.lu)
f1 <- update(f0, . ~ wks * .)
f2 <- update(f1, . ~ . + (wks|site) + (wks|leaf.origin/tree/leaf))
#model with final time point only
fx <- formula(rv ~ 1 + dmg + wtr + ha + lu + lf.lu)
fx <- update(fx, . ~ . + (1|site) + (1|leaf.origin/tree/leaf))
#### models ####
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
#calculating k/day
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),fm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),cm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'farm'),start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'forest'),start=list('k'= 0.01)))
ts.mod.fm <- glmmTMB(f2, fm, family=beta_family(link = "logit"))
summary(ts.mod.fm)
ts.mod.cm <- glmmTMB(f2, cm, family=beta_family(link = "logit"))
summary(ts.mod.cm)
# #saving model results for Table 1
# rownames_to_column(as.data.frame(summary(ts.mod.fm)$coefficients[1])) %>% write_csv(., '~/Desktop/fmmod.csv')
# rownames_to_column(as.data.frame(summary(ts.mod.cm)$coefficients[1])) %>% write_csv(., '~/Desktop/cmmod.csv')
#interaction model
f3 <- formula(rv ~ wks + dmg + ha + lu + (wks | site) + (wks | leaf.origin/tree/leaf) +
wks:dmg + wks:ha + wks:lu + dmg:ha + dmg:lu + ha:lu +
dmg:ha:wks + dmg:lu:wks + ha:lu:wks)
summary(glmmTMB(f3, fm, family=beta_family(link = "logit"))) #no higher-order interactions
fm.end <- filter(fm, weeks == 4)
cm.end <- filter(cm, weeks == 4)
t4.mod.fm <- glmmTMB(fx, fm.end, family=beta_family(link = "logit"))
summary(t4.mod.fm)
t4.mod.cm <- glmmTMB(fx, cm.end, family=beta_family(link = "logit"))
summary(t4.mod.cm)
fm$prop.decomp <- fm$prop.decomp*100
cm$prop.decomp <- cm$prop.decomp*100
#only adding interactions among factor of interest
fx.i <- formula(rv ~ dmg + ha + lu + (1 | site) + (1 | leaf.origin/tree/leaf) +
dmg:ha + dmg:lu + ha:lu)
t4.mod.fm <- glmmTMB(fx.i, fm.end, family=beta_family(link = "logit"))
summary(t4.mod.fm)
summary(glmmTMB(fx.i, fm.end, family=beta_family(link = "logit")))
summary(glmmTMB(fx.i, fm.end, family=beta_family(link = "logit")))
summary(glmmTMB(fx.i, cm.end, family=beta_family(link = "logit")))
# #interaction model
# f3 <- formula(rv ~ wks + dmg + ha + lu + (wks | site) + (wks | leaf.origin/tree/leaf) +
#                 wks:dmg + wks:ha + wks:lu + dmg:ha + dmg:lu + ha:lu +
#                 dmg:ha:wks + dmg:lu:wks + ha:lu:wks)
# summary(glmmTMB(f3, fm, family=beta_family(link = "logit"))) #no higher-order interactions
# summary(glmmTMB(f3, cm, family=beta_family(link = "logit")))
# #does not converge, going Bayesian
library(brms)
#convergence problems again
m1 <- brm(fx.i, cm.end, family=beta_family(link = "logit"))
summary(m1)
plot(m1)
?brm
#convergence problems again
m1 <- brm(fx.i, cm.end, family=beta_family(link = "logit"),iter=4000,thin=2)
summary(m1)
plot(m1)
### Code for experimental project on drivers of decomposition in Kibale streams ###
### Vincent Fugère, 2019
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
#### load and format data ####
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
#to conduct dmg analysis at whole-leaf or whole-tree level
data <- data %>% group_by(leaf) %>% mutate(avg.dmg = mean(damage.area)) %>% ungroup
data <- data %>% group_by(tree) %>% mutate(tree.avg.dmg = mean(damage.area)) %>% ungroup
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#leaching un-adjusted for k calculation
data$exp.dec <- with(data, (AFDM.after / dry.weight)*100)
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
#1- because we want prop decomposed instead of prop left
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$lf.dmg <- rescale(data$avg.dmg, c(0,1))
data$tree.dmg <- rescale(data$tree.avg.dmg, c(0,1))
data$dm <- data$leaching.adj.dry.weight
mean(data$leaching.adj.dry.weight)
mean(data$dm)
sd(data$dm)
sd(data$dm)/sqrt(nrow(data))
range(data$dm)
anova(lm(dm~site,data))
boxplot(dm~site,data)
anova(lm(dm~land.use,data))
boxplot(dm~land.use,data)
anova(lm(dm~watershed,data))
boxplot(dm~watershed,data)
anova(lm(dm~lu,data))
anova(lm(dm~ha,data))
summary(lm(dm~dmg,data))
summary(lm(dm~damage.area,data))
summary(lm(dry.weight~damage.area,data))
data$dm <- data$dry.weight
mean(data$dm)
sd(data$dm)
sd(data$dm)/sqrt(nrow(data)) #se
range(data$dm)
anova(lm(dm~lu,data))
anova(lm(dm~ha,data))
summary(lm(dm~damage.area,data))
anova(lm(dm~damage.area,data))
plot(lm(dm~damage.area,data))
summary(lm(dm~lu+ha+dmg,data))
plot(lm(dm~lu+ha+dmg,data))
summary(lm(log(dm)~lu+ha+dmg,data))
plot(dm~dmg,data)
#relationship driven by high-leverage outlier
data2 <- data[data$dmg < 0.95,]
anova(lm(dm~lu,data))
anova(lm(dm~ha,data))
summary(lm(dm~dmg,data))
plot(dm~dmg,data)
#relationship driven by high-leverage outlier
data2 <- data[data$dmg < 0.95,]
anova(lm(dm~lu,data2))
anova(lm(dm~ha,data2))
summary(lm(dm~dmg,data2))
#relationship driven by high-leverage outlier
data2 <- data[data$dmg < 0.8,]
anova(lm(dm~lu,data2))
anova(lm(dm~ha,data2))
summary(lm(dm~dmg,data2))
#relationship driven by high-leverage outlier
data2 <- data[data$dmg < 0.95,]
anova(lm(dm~lu,data2))
anova(lm(dm~ha,data2))
summary(lm(dm~dmg,data2))
plot(dm~dmg,data2)
plot(lm(dm~dmg,data2))
summary(lm(log(dm)~dmg,data2))
plot(dm~dmg,data2)
summary(lm(dm~dmg+ha+lu,data2))
summary(lm(dm~dmg,data2))
mean(data$dm)
data$dm <- data$dry.weight
mean(data$dm)
sd(data$dm)
range(data$dm)
anova(lm(dm~lu,data2))
anova(lm(dm~ha,data2))
anova(lm(dm~lu,data))
anova(lm(dm~ha,data))
anova(lm(dm~lu,data2))
anova(lm(dm~ha,data2))
summary(lm(dm~dmg,data2))
anova(lm(dm~lu,data2))
anova(lm(dm~ha,data2))
corvif(data[,c('dmg','lu','ha','wks','wtr','lf.lu','lf.dmg','tree.dmg')])
f0 <- formula(rv ~ 1 + wks + wtr + dmg + ha + lu + lf.lu)
f1 <- update(f0, . ~ wks * .)
f2 <- update(f1, . ~ . + (wks|site) + (wks|leaf.origin/tree/leaf))
f0 <- formula(rv ~ 1 + wks + wtr + dmg + ha + lu + lf.lu+ dry.weight)
f1 <- update(f0, . ~ wks * .)
f2 <- update(f1, . ~ . + (wks|site) + (wks|leaf.origin/tree/leaf))
fx <- formula(rv ~ 1 + dmg + wtr + ha + lu + lf.lu + dry.weight)
fx <- update(fx, . ~ . + (1|site) + (1|leaf.origin/tree/leaf))
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
#calculating k/day
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),fm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),cm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'farm'),start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'forest'),start=list('k'= 0.01)))
ts.mod.fm <- glmmTMB(f2, fm, family=beta_family(link = "logit"))
summary(ts.mod.fm)
ts.mod.cm <- glmmTMB(f2, cm, family=beta_family(link = "logit"))
ts.mod.cm <- glmmTMB(f2, cm, family=beta_family(link = "logit"))
summary(ts.mod.cm)
fm.end <- filter(fm, weeks == 4)
cm.end <- filter(cm, weeks == 4)
t4.mod.fm <- glmmTMB(fx, fm.end, family=beta_family(link = "logit"))
summary(t4.mod.fm)
data$dry.weight <- rescale(data$dry.weight, c(0,1))
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
ts.mod.fm <- glmmTMB(f2, fm, family=beta_family(link = "logit"))
summary(ts.mod.fm)
ts.mod.cm <- glmmTMB(f2, cm, family=beta_family(link = "logit"))
summary(ts.mod.cm)
fm.end <- filter(fm, weeks == 4)
cm.end <- filter(cm, weeks == 4)
t4.mod.fm <- glmmTMB(fx, fm.end, family=beta_family(link = "logit"))
summary(t4.mod.fm)
t4.mod.cm <- glmmTMB(fx, cm.end, family=beta_family(link = "logit"))
summary(t4.mod.cm)
summary(t4.mod.fm)
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
#to conduct dmg analysis at whole-leaf or whole-tree level
data <- data %>% group_by(leaf) %>% mutate(avg.dmg = mean(damage.area)) %>% ungroup
data <- data %>% group_by(tree) %>% mutate(tree.avg.dmg = mean(damage.area)) %>% ungroup
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#leaching un-adjusted for k calculation
data$exp.dec <- with(data, (AFDM.after / dry.weight)*100)
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$lf.dmg <- rescale(data$avg.dmg, c(0,1))
data$tree.dmg <- rescale(data$tree.avg.dmg, c(0,1))
corvif(data[,c('dmg','lu','ha','wks','wtr','lf.lu','lf.dmg','tree.dmg')])
f0 <- formula(rv ~ 1 + wks + wtr + dmg + ha + lu + lf.lu)
f1 <- update(f0, . ~ wks * .)
f2 <- update(f1, . ~ . + (wks|site) + (wks|leaf.origin/tree/leaf))
fx <- formula(rv ~ 1 + dmg + wtr + ha + lu + lf.lu)
fx <- update(fx, . ~ . + (1|site) + (1|leaf.origin/tree/leaf))
data$mass.init <- rescale(data$leaching.adj.dry.weight, c(0,1))
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
#calculating k/day
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),fm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),cm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'farm'),start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'forest'),start=list('k'= 0.01)))
ts.mod.fm <- glmmTMB(f2, fm, family=beta_family(link = "logit"))
summary(ts.mod.fm)
fx <- formula(rv ~ 1 + dmg + wtr + ha + lu + lf.lu)
fx <- update(fx, . ~ . + (1|site) + (1|leaf.origin/tree/leaf))
fx
fm$leaf.origin
fx <- formula(rv ~ dmg + ha + lu + lf.lu + (1 | wtr/site) + (1 | leaf.origin/tree/leaf))
data$mass.init <- rescale(data$leaching.adj.dry.weight, c(0,1))
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
#calculating k/day
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),fm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),cm,start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'farm'),start=list('k'= 0.01)))
summary(nls(exp.dec~100*(exp(1)^(-k*(weeks*7))),subset(cm, land.use == 'forest'),start=list('k'= 0.01)))
fm.end <- filter(fm, weeks == 4)
cm.end <- filter(cm, weeks == 4)
t4.mod.fm <- glmmTMB(fx, fm.end, family=beta_family(link = "logit"))
summary(t4.mod.fm)
t4.mod.cm <- glmmTMB(fx, cm.end, family=beta_family(link = "logit"))
summary(t4.mod.cm)
fx <- formula(rv ~ dmg + ha + lu + lf.lu + (1 | wtr/site) + (1 | leaf.origin/tree/leaf))
t4.mod.fm <- glmmTMB(fx, fm.end, family=beta_family(link = "logit"))
summary(t4.mod.fm)
t4.mod.cm <- glmmTMB(fx, cm.end, family=beta_family(link = "logit"))
summary(t4.mod.cm)
library(brms)
?brm
getOption("mc.cores",
1L)
t4.mod.cm <- brm(fx, cm.end, family=beta_family(link = "logit"),cores=2)
t4.mod.cm <- brm(fx, cm.end, family=beta_family(link = "logit"),corezs=2)
t4.mod.cm <- brm(fx, cm.end)
y = 1:10
x = 11:20
brm(y~x)
dat <- data.frame(x,y)
dat
brm(y~x,dat)
install.packages("brms")
install.packages(c("bayesplot", "boot", "callr", "car", "carData", "caTools", "cli", "covr", "cubature", "curl", "data.table", "dendextend", "digest", "DT", "e1071", "fields", "foreign", "future", "globals", "haven", "Hmisc", "hms", "htmlTable", "huge", "igraph", "insight", "KernSmooth", "knitr", "listenv", "maptools", "Matrix", "MCMCpack", "mgcv", "multcomp", "MuMIn", "ncdf4", "network", "nlme", "openxlsx", "pals", "patchwork", "performance", "piecewiseSEM", "plotrix", "plyr", "quadprog", "quantreg", "R6", "randomcoloR", "Rcpp", "RcppArmadillo", "RcppEigen", "rgdal", "rlang", "rmarkdown", "RNeXML", "roxygen2", "rversions", "rvest", "scales", "segmented", "selectr", "skimr", "sna", "sp", "spam", "survival", "testthat", "tidyverse", "tinytex", "webshot", "writexl", "xfun"))
install.packages(c("bayesplot", "boot", "callr", "car", "carData", "caTools", "cli", "covr", "cubature", "curl", "data.table", "dendextend", "digest", "DT", "e1071", "fields", "foreign", "future", "globals", "haven", "Hmisc", "hms", "htmlTable", "huge", "igraph", "insight", "KernSmooth", "knitr", "listenv", "maptools", "Matrix", "MCMCpack", "mgcv", "multcomp", "MuMIn", "ncdf4", "network", "nlme", "openxlsx", "pals", "patchwork", "performance", "piecewiseSEM", "plotrix", "plyr", "quadprog", "quantreg", "R6", "randomcoloR", "Rcpp", "RcppArmadillo", "RcppEigen", "rgdal", "rlang", "rmarkdown", "RNeXML", "roxygen2", "rversions", "rvest", "scales", "segmented", "selectr", "skimr", "sna", "sp", "spam", "survival", "testthat", "tidyverse", "tinytex", "webshot", "writexl", "xfun"))
install.packages(c("bayesplot", "boot", "callr", "car", "carData", "caTools", "cli", "covr", "cubature", "curl", "data.table", "dendextend", "digest", "DT", "e1071", "fields", "foreign", "future", "globals", "haven", "Hmisc", "hms", "htmlTable", "huge", "igraph", "insight", "KernSmooth", "knitr", "listenv", "maptools", "Matrix", "MCMCpack", "mgcv", "multcomp", "MuMIn", "ncdf4", "network", "nlme", "openxlsx", "pals", "patchwork", "performance", "piecewiseSEM", "plotrix", "plyr", "quadprog", "quantreg", "R6", "randomcoloR", "Rcpp", "RcppArmadillo", "RcppEigen", "rgdal", "rlang", "rmarkdown", "RNeXML", "roxygen2", "rversions", "rvest", "scales", "segmented", "selectr", "skimr", "sna", "sp", "spam", "survival", "testthat", "tidyverse", "tinytex", "webshot", "writexl", "xfun"))
