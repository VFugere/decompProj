pt <- coefs[w,'value']
lwr <- coefs[w,'lwr']
upr <- coefs[w,'upr']
if(0 < upr & 0 > lwr){
alph <- 0.3
} else {
alph <- 1
}
segments(x0=lwr,x1=upr,y0=w,y1=w,col=alpha(rev(cols)[w],alph),lwd=3)
points(x=pt,y=w,pch=16,col=alpha(rev(cols)[w],alph),cex=2)
}
legend('topright',box.col=0,box.lwd=0,legend=expression(italic('fine mesh')))
## bottom panels : coarse mesh
par(mar=c(4,4,1,1))
plot(prop.decomp~weeks,cm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(cm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*land.use, cm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*land.use, cm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$land.use <- as.factor(means$land.use)
coltmp <- c(cols[1],1)
for(i in 1:2){
data.tmp <- subset(means, land.use == levels(means$land.use)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topright',bty='n',legend = '(b)', cex =1.2)
plot(prop.decomp~weeks,cm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(cm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*leaf.deployment, cm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*leaf.deployment, cm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$leaf.deployment <- as.factor(means$leaf.deployment)
coltmp <- c(cols[2],1)
for(i in 1:2){
data.tmp <- subset(means, leaf.deployment == levels(means$leaf.deployment)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
tp4 <- subset(cm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
#getting coefs
coefs <- rownames_to_column(as.data.frame(summary(t4.mod.cm)$coefficients[1])) %>%
rename(coef = rowname, value = cond.Estimate, se = cond.Std..Error) %>% select(coef:se) %>%
filter(coef != '(Intercept)')
coefs %<>% mutate('lwr' = value-1.96*se, 'upr' = value+1.96*se)
coefs <- coefs[c(2,5,1,3,4),]
xmin <- min(coefs$lwr)
xmax <- max(coefs$upr)
par(mar=c(4,7,1,1))
plot(0,type='n',yaxt='n',xaxt='n',cex.axis=1,ann=F,bty='l',xlim=xlim=c(-6,2),ylim=c(0.5,5.5))
axis(2,cex.axis=1,lwd=0,lwd.ticks=0,at=1:5,labels = rev(c('farm vs. forest','away vs. home','leaf damage','leaf land use','watershed')),las=1)
abline(v=0,lty=2,lwd=1)
title(xlab='parameter estimate')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
for(w in 1:5){
pt <- coefs[w,'value']
lwr <- coefs[w,'lwr']
upr <- coefs[w,'upr']
if(0 < upr & 0 > lwr){
alph <- 0.3
} else {
alph <- 1
}
segments(x0=lwr,x1=upr,y0=w,y1=w,col=alpha(rev(cols)[w],alph),lwd=3)
points(x=pt,y=w,pch=16,col=alpha(rev(cols)[w],alph),cex=2)
}
legend('topright',box.lwd=0,box.col=0,legend=expression(italic('coarse mesh')))
dev.off()
#### Figure 2 ####
pdf('~/Desktop/Fig2.pdf',width=7,height = 3.8,pointsize = 8)
layout(rbind(c(1,2,3,4,4),c(5,6,7,8,8)))
## top panels : fine mesh
par(mar=c(4,4,1,1),cex=1)
plot(prop.decomp~weeks,fm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(fm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*land.use, fm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*land.use, fm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$land.use <- as.factor(means$land.use)
coltmp <- c(cols[1],1)
for(i in 1:2){
data.tmp <- subset(means, land.use == levels(means$land.use)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topleft',bty='n',legend = c('forest','farm'), lty=1, col=rev(coltmp),lwd=2,seg.len = 0.8)
legend('topright',bty='n',legend = '(a)', cex =1.2)
plot(prop.decomp~weeks,fm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(fm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*leaf.deployment, fm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*leaf.deployment, fm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$leaf.deployment <- as.factor(means$leaf.deployment)
coltmp <- c(cols[2],1)
for(i in 1:2){
data.tmp <- subset(means, leaf.deployment == levels(means$leaf.deployment)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topleft',bty='n',legend = c('home','away'), lty=1, col=rev(coltmp),lwd=2,seg.len = 0.8)
tp4 <- subset(fm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
legend('topright',bty='n',legend=expression(italic('day 28')))
#getting coefs
coefs <- rownames_to_column(as.data.frame(summary(t4.mod.fm)$coefficients[1])) %>%
rename(coef = rowname, value = cond.Estimate, se = cond.Std..Error) %>% select(coef:se) %>%
filter(coef != '(Intercept)')
coefs %<>% mutate('lwr' = value-1.96*se, 'upr' = value+1.96*se)
coefs <- coefs[c(2,5,1,3,4),]
xmin <- min(coefs$lwr)
xmax <- max(coefs$upr)
par(mar=c(4,7,1,1),cex=1)
plot(0,type='n',yaxt='n',xaxt='n',cex.axis=1,ann=F,bty='l',xlim=c(-6,2),ylim=c(0.5,5.5))
axis(2,cex.axis=1,lwd=0,lwd.ticks=0,at=1:5,labels = rev(c('farm vs. forest','away vs. home','leaf damage','leaf land use','watershed')),las=1)
abline(v=0,lty=2,lwd=1)
title(xlab='parameter estimate')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
for(w in 1:5){
pt <- coefs[w,'value']
lwr <- coefs[w,'lwr']
upr <- coefs[w,'upr']
if(0 < upr & 0 > lwr){
alph <- 0.3
} else {
alph <- 1
}
segments(x0=lwr,x1=upr,y0=w,y1=w,col=alpha(rev(cols)[w],alph),lwd=3)
points(x=pt,y=w,pch=16,col=alpha(rev(cols)[w],alph),cex=2)
}
legend('topright',box.col=0,box.lwd=0,legend=expression(italic('fine mesh')))
## bottom panels : coarse mesh
par(mar=c(4,4,1,1))
plot(prop.decomp~weeks,cm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(cm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*land.use, cm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*land.use, cm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$land.use <- as.factor(means$land.use)
coltmp <- c(cols[1],1)
for(i in 1:2){
data.tmp <- subset(means, land.use == levels(means$land.use)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topright',bty='n',legend = '(b)', cex =1.2)
plot(prop.decomp~weeks,cm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(cm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*leaf.deployment, cm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*leaf.deployment, cm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$leaf.deployment <- as.factor(means$leaf.deployment)
coltmp <- c(cols[2],1)
for(i in 1:2){
data.tmp <- subset(means, leaf.deployment == levels(means$leaf.deployment)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
tp4 <- subset(cm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
#getting coefs
coefs <- rownames_to_column(as.data.frame(summary(t4.mod.cm)$coefficients[1])) %>%
rename(coef = rowname, value = cond.Estimate, se = cond.Std..Error) %>% select(coef:se) %>%
filter(coef != '(Intercept)')
coefs %<>% mutate('lwr' = value-1.96*se, 'upr' = value+1.96*se)
coefs <- coefs[c(2,5,1,3,4),]
xmin <- min(coefs$lwr)
xmax <- max(coefs$upr)
par(mar=c(4,7,1,1))
plot(0,type='n',yaxt='n',xaxt='n',cex.axis=1,ann=F,bty='l',xlim=c(-6,2),ylim=c(0.5,5.5))
axis(2,cex.axis=1,lwd=0,lwd.ticks=0,at=1:5,labels = rev(c('farm vs. forest','away vs. home','leaf damage','leaf land use','watershed')),las=1)
abline(v=0,lty=2,lwd=1)
title(xlab='parameter estimate')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
for(w in 1:5){
pt <- coefs[w,'value']
lwr <- coefs[w,'lwr']
upr <- coefs[w,'upr']
if(0 < upr & 0 > lwr){
alph <- 0.3
} else {
alph <- 1
}
segments(x0=lwr,x1=upr,y0=w,y1=w,col=alpha(rev(cols)[w],alph),lwd=3)
points(x=pt,y=w,pch=16,col=alpha(rev(cols)[w],alph),cex=2)
}
legend('topright',box.lwd=0,box.col=0,legend=expression(italic('coarse mesh')))
dev.off()
tp4 <- subset(fm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
legend('topright',bty='n',legend=expression(italic('day 28')))
glimpse(volcano)
volcano
install.packages("akima")
library(akima)
dtemp <- subset(fm, weeks == 4)
dtemp$damage.area <- dtemp$damage.area*100
glimpse(dtemp)
dtemp <- select(dtemp, weeks, damage.area, prop.decomp)
dtemp
dtemp <- with(dtemp, interp(weeks, damage.area, prop.decomp))
dtemp <- with(dtemp, interp)
dtemp
dtemp <- subset(fm, weeks == 4)
dtemp$damage.area <- dtemp$damage.area*100
dtemp <- select(dtemp, weeks, damage.area, prop.decomp)
?interp
dtemp <- subset(fm, weeks == 4)
dtemp$damage.area <- dtemp$damage.area*100
dtemp <- select(dtemp, weeks, damage.area, prop.decomp) %>% as.data.frame
colnames(dtemp) <- c('x','y','z')
dtemp
dtemp <- with(dtemp, interp(x,y,z))
colnames(dtemp) <- c('x','y','z',x0=4,y0=10)
colnames(dtemp) <- c('x','y','z',x0=4,y0=4)
colnames(dtemp) <- c('x','y','z',x0=4,y0=10,z0=10)
colnames(dtemp) <- c('x','y','z',xo=1:4,yo=seq(0,13,1))
data("akima")
tp4 <- subset(fm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
legend('topright',bty='n',legend=expression(italic('day 28')))
#getting coefs
coefs <- rownames_to_column(as.data.frame(summary(t4.mod.fm)$coefficients[1])) %>%
rename(coef = rowname, value = cond.Estimate, se = cond.Std..Error) %>% select(coef:se) %>%
filter(coef != '(Intercept)')
#### Figure 2 ####
pdf('~/Desktop/Fig2.pdf',width=7,height = 3.8,pointsize = 8)
layout(rbind(c(1,2,3,4,4),c(5,6,7,8,8)))
## top panels : fine mesh
par(mar=c(4,4,1,1),cex=1)
plot(prop.decomp~weeks,fm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(fm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*land.use, fm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*land.use, fm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$land.use <- as.factor(means$land.use)
coltmp <- c(cols[1],1)
for(i in 1:2){
data.tmp <- subset(means, land.use == levels(means$land.use)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topleft',bty='n',legend = c('forest','farm'), lty=1, col=rev(coltmp),lwd=2,seg.len = 0.8)
legend('topright',bty='n',legend = '(a)', cex =1.2)
plot(prop.decomp~weeks,fm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(fm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*leaf.deployment, fm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*leaf.deployment, fm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$leaf.deployment <- as.factor(means$leaf.deployment)
coltmp <- c(cols[2],1)
for(i in 1:2){
data.tmp <- subset(means, leaf.deployment == levels(means$leaf.deployment)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topleft',bty='n',legend = c('home','away'), lty=1, col=rev(coltmp),lwd=2,seg.len = 0.8)
tp4 <- subset(fm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
legend('topright',bty='n',legend=expression(italic('day 28')))
#getting coefs
coefs <- rownames_to_column(as.data.frame(summary(t4.mod.fm)$coefficients[1])) %>%
rename(coef = rowname, value = cond.Estimate, se = cond.Std..Error) %>% select(coef:se) %>%
filter(coef != '(Intercept)')
coefs %<>% mutate('lwr' = value-1.96*se, 'upr' = value+1.96*se)
coefs <- coefs[c(2,5,1,3,4),]
xmin <- min(coefs$lwr)
xmax <- max(coefs$upr)
par(mar=c(4,7,1,1),cex=1)
plot(0,type='n',yaxt='n',xaxt='n',cex.axis=1,ann=F,bty='l',xlim=c(-6,2),ylim=c(0.5,5.5))
axis(2,cex.axis=1,lwd=0,lwd.ticks=0,at=1:5,labels = rev(c('farm vs. forest','away vs. home','leaf damage','leaf land use','watershed')),las=1)
abline(v=0,lty=2,lwd=1)
title(xlab='parameter estimate')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
for(w in 1:5){
pt <- coefs[w,'value']
lwr <- coefs[w,'lwr']
upr <- coefs[w,'upr']
if(0 < upr & 0 > lwr){
alph <- 0.3
} else {
alph <- 1
}
segments(x0=lwr,x1=upr,y0=w,y1=w,col=alpha(rev(cols)[w],alph),lwd=3)
points(x=pt,y=w,pch=16,col=alpha(rev(cols)[w],alph),cex=2)
}
legend('topright',box.col=0,box.lwd=0,legend=expression(italic('fine mesh')))
## bottom panels : coarse mesh
par(mar=c(4,4,1,1))
plot(prop.decomp~weeks,cm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(cm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*land.use, cm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*land.use, cm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$land.use <- as.factor(means$land.use)
coltmp <- c(cols[1],1)
for(i in 1:2){
data.tmp <- subset(means, land.use == levels(means$land.use)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
legend('topright',bty='n',legend = '(b)', cex =1.2)
plot(prop.decomp~weeks,cm,type='n',yaxt='n',xaxt='n',xlim=c(1,4),ylim=range(cm$prop.decomp),ann=F,bty='l')
title(xlab='days in stream')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1,at=1:4,labels = seq(7,28,by=7))
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
means <- aggregate(prop.decomp~weeks*leaf.deployment, cm, FUN = 'mean')
se <- aggregate(prop.decomp~weeks*leaf.deployment, cm, FUN = 'sd')
means$se <- 1.96*se$prop.decomp/sqrt(nrow(se))
means$leaf.deployment <- as.factor(means$leaf.deployment)
coltmp <- c(cols[2],1)
for(i in 1:2){
data.tmp <- subset(means, leaf.deployment == levels(means$leaf.deployment)[i])
plot.data <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$prop.decomp, n = 1000))
plot.data$se <- as.data.frame(approx(x = data.tmp$weeks, y = data.tmp$se, n = 1000))[,2]
polygon(x=c(plot.data$x,rev(plot.data$x)), y=c(plot.data$y+plot.data$se,rev(plot.data$y-plot.data$se)), border=NA, col=alpha(coltmp[i],0.2))
lines(y ~ x, plot.data, lwd=2, col = alpha(coltmp[i],0.8))
}
rm(data.tmp,i)
tp4 <- subset(cm, weeks == 4)
tp4$damage.area <- tp4$damage.area*100
plot(prop.decomp~damage.area,tp4,type='n',yaxt='n',xaxt='n',xlim=range(tp4$damage.area),ylim=range(tp4$prop.decomp),ann=F,bty='l')
title(xlab='leaf damage (%)')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
title(ylab='proportion decomposed')
axis(2,cex.axis=1,lwd=0,lwd.ticks=1,at=seq(0,1,length.out = 5),labels=seq(0,1,length.out = 5))
points(prop.decomp~damage.area,tp4,col=alpha(cols[3],0.5),pch=16)
#getting coefs
coefs <- rownames_to_column(as.data.frame(summary(t4.mod.cm)$coefficients[1])) %>%
rename(coef = rowname, value = cond.Estimate, se = cond.Std..Error) %>% select(coef:se) %>%
filter(coef != '(Intercept)')
coefs %<>% mutate('lwr' = value-1.96*se, 'upr' = value+1.96*se)
coefs <- coefs[c(2,5,1,3,4),]
xmin <- min(coefs$lwr)
xmax <- max(coefs$upr)
par(mar=c(4,7,1,1))
plot(0,type='n',yaxt='n',xaxt='n',cex.axis=1,ann=F,bty='l',xlim=c(-6,2),ylim=c(0.5,5.5))
axis(2,cex.axis=1,lwd=0,lwd.ticks=0,at=1:5,labels = rev(c('farm vs. forest','away vs. home','leaf damage','leaf land use','watershed')),las=1)
abline(v=0,lty=2,lwd=1)
title(xlab='parameter estimate')
axis(1,cex.axis=1,lwd=0,lwd.ticks=1)
for(w in 1:5){
pt <- coefs[w,'value']
lwr <- coefs[w,'lwr']
upr <- coefs[w,'upr']
if(0 < upr & 0 > lwr){
alph <- 0.3
} else {
alph <- 1
}
segments(x0=lwr,x1=upr,y0=w,y1=w,col=alpha(rev(cols)[w],alph),lwd=3)
points(x=pt,y=w,pch=16,col=alpha(rev(cols)[w],alph),cex=2)
}
legend('topright',box.lwd=0,box.col=0,legend=expression(italic('coarse mesh')))
dev.off()
### Code for experimental project on drivers of decomposition in Kibale streams ###
### Vincent Fugère, 2019
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(glmmTMB)
library(magrittr)
library(plotrix)
library(party)
library(devtools)
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/vif.R')
source_url('https://raw.githubusercontent.com/VFugere/Rfuncs/master/utils.R')
cols <- brewer.pal(5, 'Dark2')
#### load and format data ####
data <- read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/leafbags.csv') %>% filter(!is.na(rep.nb))
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv')
glimpse(dmg)
dmg <-  read_csv('~/Google Drive/Recherche/PhD/manuscripts/caterpillar/decompProj/caterpillar.csv') %>%
select(leaf.nb,damage.area,area.true)
data <- inner_join(data, dmg, by = 'leaf.nb') #loosing one replicate - the leaf fragment with a missing picture
rm(dmg)
data$leaf.lu <- 'forest'
data$leaf.lu[data$leaf.origin %in% c('miranga','bugembe')] <- 'farm'
data$leaf.lu <- as.factor(data$leaf.lu)
glimpse(data)
data$sla <- area.true/dry.weight
data$sla <- with(data, area.true/dry.weight)
data$sla
data$prop <- data$prct.mass.rem/100
data$prop.decomp <- 1-data$prop
#transformation based on: https://stats.stackexchange.com/questions/31300/dealing-with-0-1-values-in-a-beta-regression
data$rv <- 1-(data$prop*(nrow(data)-1)+0.5) / nrow(data)
data$dmg <- rescale(data$damage.area, c(0,1))
data$lu <- as.factor(data$land.use)
data$lu <- relevel(data$lu, ref = 'forest')
data$ha <- as.factor(data$leaf.deployment)
data$ha <- relevel(data$ha, ref = 'home')
data$wks <- rescale(data$weeks, c(0,1))
data$wtr <- as.factor(data$watershed)
data$lf.lu <- relevel(data$leaf.lu, ref = 'forest')
data$sla <- rescale(data$sla, c(0,1))
corvif(data[,c('dmg','lu','ha','wks','wtr','lf.lu','sla')])
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
ts.mod.fm <- glmmTMB(f2, fm, family=beta_family(link = "logit"))
summary(ts.mod.fm)
f0 <- formula(rv ~ 1 + wks + wtr + dmg + ha + lu + lf.lu)
f1 <- update(f0, . ~ wks * .)
f2 <- update(f1, . ~ . + (wks|site) + (wks|leaf.origin/leaf))
fx <- formula(rv ~ 1 + dmg + wtr + ha + lu + lf.lu)
fx.i <- update(fx, . ~ .:.)
fx <- update(fx, . ~ . + (1|site) + (1|leaf.origin/leaf))
fx.i <- update(fx.i, . ~ .  + (1|site) + (1|leaf.origin/leaf)) #can't fit this model, not enough data
#### models ####
fm <- filter(data, mesh.type == 'fine')
cm <- filter(data, mesh.type == 'coarse')
fm.end <- filter(fm, weeks == 4)
cm.end <- filter(cm, weeks == 4)
#regression trees
fit.fm <- ctree(rv ~ dmg+lu+ha+wks+wtr+leaf.lu+lf.lu+sla, data = fm.end, controls = ctree_control(minsplit = 1, testtype = 'MonteCarlo'))
plot(fit.fm, inner_panel=node_inner(fit.fm,pval = T),
terminal_panel=node_boxplot(fit.fm, width=0.4,fill='white',ylines=3,id=F))
fit.cm <- ctree(rv ~ dmg+lu+ha+wks+wtr+leaf.lu+lf.lu+sla, data = cm.end, controls = ctree_control(minsplit = 1, testtype = 'MonteCarlo'))
plot(fit.cm, inner_panel=node_inner(fit.cm,pval = T),
terminal_panel=node_boxplot(fit.cm, width=0.4,fill='white',ylines=3,id=F))
plot(prop.decomp~sla,fm.end)
